/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from 'gill';
import { AURACHAIN_PROGRAM_ADDRESS } from '../programs';

/** UsernameTooLong: Username too long */
export const AURACHAIN_ERROR__USERNAME_TOO_LONG = 0x1770; // 6000
/** InvalidAmount: Amount must be greater than zero */
export const AURACHAIN_ERROR__INVALID_AMOUNT = 0x1771; // 6001
/** SelfAuraNotAllowed: You cannot increase/decrease your own aura */
export const AURACHAIN_ERROR__SELF_AURA_NOT_ALLOWED = 0x1772; // 6002
/** MathError: Overflow or underflow detected */
export const AURACHAIN_ERROR__MATH_ERROR = 0x1773; // 6003
/** Unauthorized: You are not authorized to perform this action. */
export const AURACHAIN_ERROR__UNAUTHORIZED = 0x1774; // 6004
/** InvalidAuraAmount: Invalid aura amount. */
export const AURACHAIN_ERROR__INVALID_AURA_AMOUNT = 0x1775; // 6005
/** Overflow: Overflow occurred while updating aura. */
export const AURACHAIN_ERROR__OVERFLOW = 0x1776; // 6006
/** InsufficientAura: Not enough aura points. */
export const AURACHAIN_ERROR__INSUFFICIENT_AURA = 0x1777; // 6007

export type AurachainError =
  | typeof AURACHAIN_ERROR__INSUFFICIENT_AURA
  | typeof AURACHAIN_ERROR__INVALID_AMOUNT
  | typeof AURACHAIN_ERROR__INVALID_AURA_AMOUNT
  | typeof AURACHAIN_ERROR__MATH_ERROR
  | typeof AURACHAIN_ERROR__OVERFLOW
  | typeof AURACHAIN_ERROR__SELF_AURA_NOT_ALLOWED
  | typeof AURACHAIN_ERROR__UNAUTHORIZED
  | typeof AURACHAIN_ERROR__USERNAME_TOO_LONG;

let aurachainErrorMessages: Record<AurachainError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  aurachainErrorMessages = {
    [AURACHAIN_ERROR__INSUFFICIENT_AURA]: `Not enough aura points.`,
    [AURACHAIN_ERROR__INVALID_AMOUNT]: `Amount must be greater than zero`,
    [AURACHAIN_ERROR__INVALID_AURA_AMOUNT]: `Invalid aura amount.`,
    [AURACHAIN_ERROR__MATH_ERROR]: `Overflow or underflow detected`,
    [AURACHAIN_ERROR__OVERFLOW]: `Overflow occurred while updating aura.`,
    [AURACHAIN_ERROR__SELF_AURA_NOT_ALLOWED]: `You cannot increase/decrease your own aura`,
    [AURACHAIN_ERROR__UNAUTHORIZED]: `You are not authorized to perform this action.`,
    [AURACHAIN_ERROR__USERNAME_TOO_LONG]: `Username too long`,
  };
}

export function getAurachainErrorMessage(code: AurachainError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (aurachainErrorMessages as Record<AurachainError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isAurachainError<TProgramErrorCode extends AurachainError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    AURACHAIN_PROGRAM_ADDRESS,
    code
  );
}
